/*
QAN AutoApi

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutputGetProof type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputGetProof{}

// OutputGetProof struct for OutputGetProof
type OutputGetProof struct {
	// A URL to the JSON Schema for this object.
	Schema *string `json:"$schema,omitempty"`
	// An array of rlp-serialized MerkleTree-Nodes which starts with the stateRoot-Node and follows the path of the SHA3 address as key
	AccountProof string `json:"AccountProof"`
	// The address associated with the account
	Address string `json:"Address"`
	// The current balance of the account in wei
	Balance string `json:"Balance"`
	// A 32 byte hash of the code of the account
	CodeHash string `json:"CodeHash"`
	// The hash of the generated proof-of-work. Null if pending
	Nonce NullableString `json:"Nonce"`
	// A 32 byte SHA3 of the storageRoot. All storage will deliver a MerkleProof starting with this rootHash
	StorageHash string `json:"StorageHash"`
	// An array of storage-entries as requested. Each entry is an object with the following fields:
	StorageProof []ResponseStorageEntry `json:"StorageProof"`
}

type _OutputGetProof OutputGetProof

// NewOutputGetProof instantiates a new OutputGetProof object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputGetProof(accountProof string, address string, balance string, codeHash string, nonce NullableString, storageHash string, storageProof []ResponseStorageEntry) *OutputGetProof {
	this := OutputGetProof{}
	this.AccountProof = accountProof
	this.Address = address
	this.Balance = balance
	this.CodeHash = codeHash
	this.Nonce = nonce
	this.StorageHash = storageHash
	this.StorageProof = storageProof
	return &this
}

// NewOutputGetProofWithDefaults instantiates a new OutputGetProof object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputGetProofWithDefaults() *OutputGetProof {
	this := OutputGetProof{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *OutputGetProof) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *OutputGetProof) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *OutputGetProof) SetSchema(v string) {
	o.Schema = &v
}

// GetAccountProof returns the AccountProof field value
func (o *OutputGetProof) GetAccountProof() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountProof
}

// GetAccountProofOk returns a tuple with the AccountProof field value
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetAccountProofOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountProof, true
}

// SetAccountProof sets field value
func (o *OutputGetProof) SetAccountProof(v string) {
	o.AccountProof = v
}

// GetAddress returns the Address field value
func (o *OutputGetProof) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *OutputGetProof) SetAddress(v string) {
	o.Address = v
}

// GetBalance returns the Balance field value
func (o *OutputGetProof) GetBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *OutputGetProof) SetBalance(v string) {
	o.Balance = v
}

// GetCodeHash returns the CodeHash field value
func (o *OutputGetProof) GetCodeHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CodeHash
}

// GetCodeHashOk returns a tuple with the CodeHash field value
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetCodeHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CodeHash, true
}

// SetCodeHash sets field value
func (o *OutputGetProof) SetCodeHash(v string) {
	o.CodeHash = v
}

// GetNonce returns the Nonce field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OutputGetProof) GetNonce() string {
	if o == nil || o.Nonce.Get() == nil {
		var ret string
		return ret
	}

	return *o.Nonce.Get()
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutputGetProof) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nonce.Get(), o.Nonce.IsSet()
}

// SetNonce sets field value
func (o *OutputGetProof) SetNonce(v string) {
	o.Nonce.Set(&v)
}

// GetStorageHash returns the StorageHash field value
func (o *OutputGetProof) GetStorageHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageHash
}

// GetStorageHashOk returns a tuple with the StorageHash field value
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetStorageHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageHash, true
}

// SetStorageHash sets field value
func (o *OutputGetProof) SetStorageHash(v string) {
	o.StorageHash = v
}

// GetStorageProof returns the StorageProof field value
func (o *OutputGetProof) GetStorageProof() []ResponseStorageEntry {
	if o == nil {
		var ret []ResponseStorageEntry
		return ret
	}

	return o.StorageProof
}

// GetStorageProofOk returns a tuple with the StorageProof field value
// and a boolean to check if the value has been set.
func (o *OutputGetProof) GetStorageProofOk() ([]ResponseStorageEntry, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageProof, true
}

// SetStorageProof sets field value
func (o *OutputGetProof) SetStorageProof(v []ResponseStorageEntry) {
	o.StorageProof = v
}

func (o OutputGetProof) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputGetProof) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["AccountProof"] = o.AccountProof
	toSerialize["Address"] = o.Address
	toSerialize["Balance"] = o.Balance
	toSerialize["CodeHash"] = o.CodeHash
	toSerialize["Nonce"] = o.Nonce.Get()
	toSerialize["StorageHash"] = o.StorageHash
	toSerialize["StorageProof"] = o.StorageProof
	return toSerialize, nil
}

func (o *OutputGetProof) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"AccountProof",
		"Address",
		"Balance",
		"CodeHash",
		"Nonce",
		"StorageHash",
		"StorageProof",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutputGetProof := _OutputGetProof{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutputGetProof)

	if err != nil {
		return err
	}

	*o = OutputGetProof(varOutputGetProof)

	return err
}

type NullableOutputGetProof struct {
	value *OutputGetProof
	isSet bool
}

func (v NullableOutputGetProof) Get() *OutputGetProof {
	return v.value
}

func (v *NullableOutputGetProof) Set(val *OutputGetProof) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputGetProof) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputGetProof) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputGetProof(val *OutputGetProof) *NullableOutputGetProof {
	return &NullableOutputGetProof{value: val, isSet: true}
}

func (v NullableOutputGetProof) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputGetProof) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


