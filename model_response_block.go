/*
QAN AutoApi

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResponseBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBlock{}

// ResponseBlock struct for ResponseBlock
type ResponseBlock struct {
	// A string of the base fee encoded in decimal format. Please note that this response field will not be included in a block requested before the EIP-1559 upgrade
	BaseFeePerGas NullableString `json:"BaseFeePerGas"`
	// The integer of the difficulty for this block encoded as a decimal
	Difficulty string `json:"Difficulty"`
	// The “extra data” field of this block
	ExtraData string `json:"ExtraData"`
	// The maximum gas allowed in this block encoded as a decimal
	GasLimit string `json:"GasLimit"`
	// The total used gas by all transactions in this block encoded as a decimal
	GasUsed string `json:"GasUsed"`
	// The block hash of the requested block. null if pending
	Hash NullableString `json:"Hash"`
	// The bloom filter for the logs of the block. null if pending
	LogsBloom NullableString `json:"LogsBloom"`
	// The address of the beneficiary to whom the mining rewards were given
	Miner string `json:"Miner"`
	// A string of a 256-bit hash encoded as a decimal
	MixHash string `json:"MixHash"`
	// The hash of the generated proof-of-work. null if pending
	Nonce NullableString `json:"Nonce"`
	// The block number of the requested block encoded as a decimal. null if pending
	Number NullableString `json:"Number"`
	// The hash of the parent block
	ParentHash string `json:"ParentHash"`
	// The root of the receipts trie of the bloc
	ReceiptsRoot string `json:"ReceiptsRoot"`
	// The SHA3 of the uncles data in the block
	Sha3Uncles string `json:"Sha3Uncles"`
	// The size of this block in bytes as an Integer value encoded as decimal
	Size string `json:"Size"`
	// The root of the final state trie of the block
	StateRoot string `json:"StateRoot"`
	// The unix timestamp for when the block was collated
	Timestamp string `json:"Timestamp"`
	// The integer of the total difficulty of the chain until this block encoded as a decimal
	TotalDifficulty string `json:"TotalDifficulty"`
	// An array of transaction objects - please see eth_getTransactionByHash for exact shape
	Transactions []ResponseTransaction `json:"Transactions"`
	// The root of the transaction trie of the block
	TransactionsRoot string `json:"TransactionsRoot"`
	// An array of uncle hashes
	Uncles []string `json:"Uncles"`
	// A withdrawals object contains information about withdrawals made by validators. Please note that this field will not be included in a block requested before the EIP-4895 upgrade
	Withdrawals ResponseWithdrawals `json:"Withdrawals"`
	// The Merkle root of withdrawal data. Also, please note that this field will not be included in a block requested before the EIP-4895 upgrade
	WithdrawalsRoot NullableString `json:"WithdrawalsRoot"`
}

type _ResponseBlock ResponseBlock

// NewResponseBlock instantiates a new ResponseBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBlock(baseFeePerGas NullableString, difficulty string, extraData string, gasLimit string, gasUsed string, hash NullableString, logsBloom NullableString, miner string, mixHash string, nonce NullableString, number NullableString, parentHash string, receiptsRoot string, sha3Uncles string, size string, stateRoot string, timestamp string, totalDifficulty string, transactions []ResponseTransaction, transactionsRoot string, uncles []string, withdrawals ResponseWithdrawals, withdrawalsRoot NullableString) *ResponseBlock {
	this := ResponseBlock{}
	this.BaseFeePerGas = baseFeePerGas
	this.Difficulty = difficulty
	this.ExtraData = extraData
	this.GasLimit = gasLimit
	this.GasUsed = gasUsed
	this.Hash = hash
	this.LogsBloom = logsBloom
	this.Miner = miner
	this.MixHash = mixHash
	this.Nonce = nonce
	this.Number = number
	this.ParentHash = parentHash
	this.ReceiptsRoot = receiptsRoot
	this.Sha3Uncles = sha3Uncles
	this.Size = size
	this.StateRoot = stateRoot
	this.Timestamp = timestamp
	this.TotalDifficulty = totalDifficulty
	this.Transactions = transactions
	this.TransactionsRoot = transactionsRoot
	this.Uncles = uncles
	this.Withdrawals = withdrawals
	this.WithdrawalsRoot = withdrawalsRoot
	return &this
}

// NewResponseBlockWithDefaults instantiates a new ResponseBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBlockWithDefaults() *ResponseBlock {
	this := ResponseBlock{}
	return &this
}

// GetBaseFeePerGas returns the BaseFeePerGas field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ResponseBlock) GetBaseFeePerGas() string {
	if o == nil || o.BaseFeePerGas.Get() == nil {
		var ret string
		return ret
	}

	return *o.BaseFeePerGas.Get()
}

// GetBaseFeePerGasOk returns a tuple with the BaseFeePerGas field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseBlock) GetBaseFeePerGasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BaseFeePerGas.Get(), o.BaseFeePerGas.IsSet()
}

// SetBaseFeePerGas sets field value
func (o *ResponseBlock) SetBaseFeePerGas(v string) {
	o.BaseFeePerGas.Set(&v)
}

// GetDifficulty returns the Difficulty field value
func (o *ResponseBlock) GetDifficulty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Difficulty
}

// GetDifficultyOk returns a tuple with the Difficulty field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetDifficultyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Difficulty, true
}

// SetDifficulty sets field value
func (o *ResponseBlock) SetDifficulty(v string) {
	o.Difficulty = v
}

// GetExtraData returns the ExtraData field value
func (o *ResponseBlock) GetExtraData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetExtraDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtraData, true
}

// SetExtraData sets field value
func (o *ResponseBlock) SetExtraData(v string) {
	o.ExtraData = v
}

// GetGasLimit returns the GasLimit field value
func (o *ResponseBlock) GetGasLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasLimit
}

// GetGasLimitOk returns a tuple with the GasLimit field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetGasLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasLimit, true
}

// SetGasLimit sets field value
func (o *ResponseBlock) SetGasLimit(v string) {
	o.GasLimit = v
}

// GetGasUsed returns the GasUsed field value
func (o *ResponseBlock) GetGasUsed() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasUsed
}

// GetGasUsedOk returns a tuple with the GasUsed field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetGasUsedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasUsed, true
}

// SetGasUsed sets field value
func (o *ResponseBlock) SetGasUsed(v string) {
	o.GasUsed = v
}

// GetHash returns the Hash field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ResponseBlock) GetHash() string {
	if o == nil || o.Hash.Get() == nil {
		var ret string
		return ret
	}

	return *o.Hash.Get()
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseBlock) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hash.Get(), o.Hash.IsSet()
}

// SetHash sets field value
func (o *ResponseBlock) SetHash(v string) {
	o.Hash.Set(&v)
}

// GetLogsBloom returns the LogsBloom field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ResponseBlock) GetLogsBloom() string {
	if o == nil || o.LogsBloom.Get() == nil {
		var ret string
		return ret
	}

	return *o.LogsBloom.Get()
}

// GetLogsBloomOk returns a tuple with the LogsBloom field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseBlock) GetLogsBloomOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogsBloom.Get(), o.LogsBloom.IsSet()
}

// SetLogsBloom sets field value
func (o *ResponseBlock) SetLogsBloom(v string) {
	o.LogsBloom.Set(&v)
}

// GetMiner returns the Miner field value
func (o *ResponseBlock) GetMiner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Miner
}

// GetMinerOk returns a tuple with the Miner field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetMinerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Miner, true
}

// SetMiner sets field value
func (o *ResponseBlock) SetMiner(v string) {
	o.Miner = v
}

// GetMixHash returns the MixHash field value
func (o *ResponseBlock) GetMixHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MixHash
}

// GetMixHashOk returns a tuple with the MixHash field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetMixHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MixHash, true
}

// SetMixHash sets field value
func (o *ResponseBlock) SetMixHash(v string) {
	o.MixHash = v
}

// GetNonce returns the Nonce field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ResponseBlock) GetNonce() string {
	if o == nil || o.Nonce.Get() == nil {
		var ret string
		return ret
	}

	return *o.Nonce.Get()
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseBlock) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nonce.Get(), o.Nonce.IsSet()
}

// SetNonce sets field value
func (o *ResponseBlock) SetNonce(v string) {
	o.Nonce.Set(&v)
}

// GetNumber returns the Number field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ResponseBlock) GetNumber() string {
	if o == nil || o.Number.Get() == nil {
		var ret string
		return ret
	}

	return *o.Number.Get()
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseBlock) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Number.Get(), o.Number.IsSet()
}

// SetNumber sets field value
func (o *ResponseBlock) SetNumber(v string) {
	o.Number.Set(&v)
}

// GetParentHash returns the ParentHash field value
func (o *ResponseBlock) GetParentHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentHash
}

// GetParentHashOk returns a tuple with the ParentHash field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetParentHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentHash, true
}

// SetParentHash sets field value
func (o *ResponseBlock) SetParentHash(v string) {
	o.ParentHash = v
}

// GetReceiptsRoot returns the ReceiptsRoot field value
func (o *ResponseBlock) GetReceiptsRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiptsRoot
}

// GetReceiptsRootOk returns a tuple with the ReceiptsRoot field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetReceiptsRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiptsRoot, true
}

// SetReceiptsRoot sets field value
func (o *ResponseBlock) SetReceiptsRoot(v string) {
	o.ReceiptsRoot = v
}

// GetSha3Uncles returns the Sha3Uncles field value
func (o *ResponseBlock) GetSha3Uncles() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha3Uncles
}

// GetSha3UnclesOk returns a tuple with the Sha3Uncles field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetSha3UnclesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha3Uncles, true
}

// SetSha3Uncles sets field value
func (o *ResponseBlock) SetSha3Uncles(v string) {
	o.Sha3Uncles = v
}

// GetSize returns the Size field value
func (o *ResponseBlock) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ResponseBlock) SetSize(v string) {
	o.Size = v
}

// GetStateRoot returns the StateRoot field value
func (o *ResponseBlock) GetStateRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateRoot
}

// GetStateRootOk returns a tuple with the StateRoot field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetStateRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateRoot, true
}

// SetStateRoot sets field value
func (o *ResponseBlock) SetStateRoot(v string) {
	o.StateRoot = v
}

// GetTimestamp returns the Timestamp field value
func (o *ResponseBlock) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ResponseBlock) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetTotalDifficulty returns the TotalDifficulty field value
func (o *ResponseBlock) GetTotalDifficulty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalDifficulty
}

// GetTotalDifficultyOk returns a tuple with the TotalDifficulty field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetTotalDifficultyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDifficulty, true
}

// SetTotalDifficulty sets field value
func (o *ResponseBlock) SetTotalDifficulty(v string) {
	o.TotalDifficulty = v
}

// GetTransactions returns the Transactions field value
func (o *ResponseBlock) GetTransactions() []ResponseTransaction {
	if o == nil {
		var ret []ResponseTransaction
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetTransactionsOk() ([]ResponseTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transactions, true
}

// SetTransactions sets field value
func (o *ResponseBlock) SetTransactions(v []ResponseTransaction) {
	o.Transactions = v
}

// GetTransactionsRoot returns the TransactionsRoot field value
func (o *ResponseBlock) GetTransactionsRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionsRoot
}

// GetTransactionsRootOk returns a tuple with the TransactionsRoot field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetTransactionsRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionsRoot, true
}

// SetTransactionsRoot sets field value
func (o *ResponseBlock) SetTransactionsRoot(v string) {
	o.TransactionsRoot = v
}

// GetUncles returns the Uncles field value
func (o *ResponseBlock) GetUncles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Uncles
}

// GetUnclesOk returns a tuple with the Uncles field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetUnclesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uncles, true
}

// SetUncles sets field value
func (o *ResponseBlock) SetUncles(v []string) {
	o.Uncles = v
}

// GetWithdrawals returns the Withdrawals field value
func (o *ResponseBlock) GetWithdrawals() ResponseWithdrawals {
	if o == nil {
		var ret ResponseWithdrawals
		return ret
	}

	return o.Withdrawals
}

// GetWithdrawalsOk returns a tuple with the Withdrawals field value
// and a boolean to check if the value has been set.
func (o *ResponseBlock) GetWithdrawalsOk() (*ResponseWithdrawals, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Withdrawals, true
}

// SetWithdrawals sets field value
func (o *ResponseBlock) SetWithdrawals(v ResponseWithdrawals) {
	o.Withdrawals = v
}

// GetWithdrawalsRoot returns the WithdrawalsRoot field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ResponseBlock) GetWithdrawalsRoot() string {
	if o == nil || o.WithdrawalsRoot.Get() == nil {
		var ret string
		return ret
	}

	return *o.WithdrawalsRoot.Get()
}

// GetWithdrawalsRootOk returns a tuple with the WithdrawalsRoot field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseBlock) GetWithdrawalsRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WithdrawalsRoot.Get(), o.WithdrawalsRoot.IsSet()
}

// SetWithdrawalsRoot sets field value
func (o *ResponseBlock) SetWithdrawalsRoot(v string) {
	o.WithdrawalsRoot.Set(&v)
}

func (o ResponseBlock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["BaseFeePerGas"] = o.BaseFeePerGas.Get()
	toSerialize["Difficulty"] = o.Difficulty
	toSerialize["ExtraData"] = o.ExtraData
	toSerialize["GasLimit"] = o.GasLimit
	toSerialize["GasUsed"] = o.GasUsed
	toSerialize["Hash"] = o.Hash.Get()
	toSerialize["LogsBloom"] = o.LogsBloom.Get()
	toSerialize["Miner"] = o.Miner
	toSerialize["MixHash"] = o.MixHash
	toSerialize["Nonce"] = o.Nonce.Get()
	toSerialize["Number"] = o.Number.Get()
	toSerialize["ParentHash"] = o.ParentHash
	toSerialize["ReceiptsRoot"] = o.ReceiptsRoot
	toSerialize["Sha3Uncles"] = o.Sha3Uncles
	toSerialize["Size"] = o.Size
	toSerialize["StateRoot"] = o.StateRoot
	toSerialize["Timestamp"] = o.Timestamp
	toSerialize["TotalDifficulty"] = o.TotalDifficulty
	toSerialize["Transactions"] = o.Transactions
	toSerialize["TransactionsRoot"] = o.TransactionsRoot
	toSerialize["Uncles"] = o.Uncles
	toSerialize["Withdrawals"] = o.Withdrawals
	toSerialize["WithdrawalsRoot"] = o.WithdrawalsRoot.Get()
	return toSerialize, nil
}

func (o *ResponseBlock) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"BaseFeePerGas",
		"Difficulty",
		"ExtraData",
		"GasLimit",
		"GasUsed",
		"Hash",
		"LogsBloom",
		"Miner",
		"MixHash",
		"Nonce",
		"Number",
		"ParentHash",
		"ReceiptsRoot",
		"Sha3Uncles",
		"Size",
		"StateRoot",
		"Timestamp",
		"TotalDifficulty",
		"Transactions",
		"TransactionsRoot",
		"Uncles",
		"Withdrawals",
		"WithdrawalsRoot",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseBlock := _ResponseBlock{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResponseBlock)

	if err != nil {
		return err
	}

	*o = ResponseBlock(varResponseBlock)

	return err
}

type NullableResponseBlock struct {
	value *ResponseBlock
	isSet bool
}

func (v NullableResponseBlock) Get() *ResponseBlock {
	return v.value
}

func (v *NullableResponseBlock) Set(val *ResponseBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBlock(val *ResponseBlock) *NullableResponseBlock {
	return &NullableResponseBlock{value: val, isSet: true}
}

func (v NullableResponseBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


