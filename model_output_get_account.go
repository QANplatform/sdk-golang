/*
QAN AutoApi

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutputGetAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputGetAccount{}

// OutputGetAccount struct for OutputGetAccount
type OutputGetAccount struct {
	// A URL to the JSON Schema for this object.
	Schema *string `json:"$schema,omitempty"`
	// The current balance of the account in wei
	Balance string `json:"Balance"`
	// A 32 byte hash of the code of the account
	CodeHash string `json:"CodeHash"`
	// The transaction count of an account
	Nonce string `json:"Nonce"`
	// The hash of the account's storage data
	StorageRoot string `json:"StorageRoot"`
}

type _OutputGetAccount OutputGetAccount

// NewOutputGetAccount instantiates a new OutputGetAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputGetAccount(balance string, codeHash string, nonce string, storageRoot string) *OutputGetAccount {
	this := OutputGetAccount{}
	this.Balance = balance
	this.CodeHash = codeHash
	this.Nonce = nonce
	this.StorageRoot = storageRoot
	return &this
}

// NewOutputGetAccountWithDefaults instantiates a new OutputGetAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputGetAccountWithDefaults() *OutputGetAccount {
	this := OutputGetAccount{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *OutputGetAccount) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputGetAccount) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *OutputGetAccount) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *OutputGetAccount) SetSchema(v string) {
	o.Schema = &v
}

// GetBalance returns the Balance field value
func (o *OutputGetAccount) GetBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *OutputGetAccount) GetBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *OutputGetAccount) SetBalance(v string) {
	o.Balance = v
}

// GetCodeHash returns the CodeHash field value
func (o *OutputGetAccount) GetCodeHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CodeHash
}

// GetCodeHashOk returns a tuple with the CodeHash field value
// and a boolean to check if the value has been set.
func (o *OutputGetAccount) GetCodeHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CodeHash, true
}

// SetCodeHash sets field value
func (o *OutputGetAccount) SetCodeHash(v string) {
	o.CodeHash = v
}

// GetNonce returns the Nonce field value
func (o *OutputGetAccount) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *OutputGetAccount) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *OutputGetAccount) SetNonce(v string) {
	o.Nonce = v
}

// GetStorageRoot returns the StorageRoot field value
func (o *OutputGetAccount) GetStorageRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageRoot
}

// GetStorageRootOk returns a tuple with the StorageRoot field value
// and a boolean to check if the value has been set.
func (o *OutputGetAccount) GetStorageRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageRoot, true
}

// SetStorageRoot sets field value
func (o *OutputGetAccount) SetStorageRoot(v string) {
	o.StorageRoot = v
}

func (o OutputGetAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputGetAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["Balance"] = o.Balance
	toSerialize["CodeHash"] = o.CodeHash
	toSerialize["Nonce"] = o.Nonce
	toSerialize["StorageRoot"] = o.StorageRoot
	return toSerialize, nil
}

func (o *OutputGetAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Balance",
		"CodeHash",
		"Nonce",
		"StorageRoot",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutputGetAccount := _OutputGetAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutputGetAccount)

	if err != nil {
		return err
	}

	*o = OutputGetAccount(varOutputGetAccount)

	return err
}

type NullableOutputGetAccount struct {
	value *OutputGetAccount
	isSet bool
}

func (v NullableOutputGetAccount) Get() *OutputGetAccount {
	return v.value
}

func (v *NullableOutputGetAccount) Set(val *OutputGetAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputGetAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputGetAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputGetAccount(val *OutputGetAccount) *NullableOutputGetAccount {
	return &NullableOutputGetAccount{value: val, isSet: true}
}

func (v NullableOutputGetAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputGetAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


