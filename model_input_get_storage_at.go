/*
QAN AutoApi

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InputGetStorageAt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputGetStorageAt{}

// InputGetStorageAt struct for InputGetStorageAt
type InputGetStorageAt struct {
	// A URL to the JSON Schema for this object.
	Schema *string `json:"$schema,omitempty"`
	// The address to check for storage
	Address string `json:"Address"`
	BlockNumber string `json:"BlockNumber"`
	// The integer of the position in storage
	Position string `json:"Position"`
}

type _InputGetStorageAt InputGetStorageAt

// NewInputGetStorageAt instantiates a new InputGetStorageAt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputGetStorageAt(address string, blockNumber string, position string) *InputGetStorageAt {
	this := InputGetStorageAt{}
	this.Address = address
	this.BlockNumber = blockNumber
	this.Position = position
	return &this
}

// NewInputGetStorageAtWithDefaults instantiates a new InputGetStorageAt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputGetStorageAtWithDefaults() *InputGetStorageAt {
	this := InputGetStorageAt{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *InputGetStorageAt) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputGetStorageAt) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *InputGetStorageAt) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *InputGetStorageAt) SetSchema(v string) {
	o.Schema = &v
}

// GetAddress returns the Address field value
func (o *InputGetStorageAt) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *InputGetStorageAt) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *InputGetStorageAt) SetAddress(v string) {
	o.Address = v
}

// GetBlockNumber returns the BlockNumber field value
func (o *InputGetStorageAt) GetBlockNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value
// and a boolean to check if the value has been set.
func (o *InputGetStorageAt) GetBlockNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockNumber, true
}

// SetBlockNumber sets field value
func (o *InputGetStorageAt) SetBlockNumber(v string) {
	o.BlockNumber = v
}

// GetPosition returns the Position field value
func (o *InputGetStorageAt) GetPosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *InputGetStorageAt) GetPositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *InputGetStorageAt) SetPosition(v string) {
	o.Position = v
}

func (o InputGetStorageAt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputGetStorageAt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["Address"] = o.Address
	toSerialize["BlockNumber"] = o.BlockNumber
	toSerialize["Position"] = o.Position
	return toSerialize, nil
}

func (o *InputGetStorageAt) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Address",
		"BlockNumber",
		"Position",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInputGetStorageAt := _InputGetStorageAt{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInputGetStorageAt)

	if err != nil {
		return err
	}

	*o = InputGetStorageAt(varInputGetStorageAt)

	return err
}

type NullableInputGetStorageAt struct {
	value *InputGetStorageAt
	isSet bool
}

func (v NullableInputGetStorageAt) Get() *InputGetStorageAt {
	return v.value
}

func (v *NullableInputGetStorageAt) Set(val *InputGetStorageAt) {
	v.value = val
	v.isSet = true
}

func (v NullableInputGetStorageAt) IsSet() bool {
	return v.isSet
}

func (v *NullableInputGetStorageAt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputGetStorageAt(val *InputGetStorageAt) *NullableInputGetStorageAt {
	return &NullableInputGetStorageAt{value: val, isSet: true}
}

func (v NullableInputGetStorageAt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputGetStorageAt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


